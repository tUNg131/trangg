[{"/Users/lexuantung/Documents/projects/trangg/src/index.js":"1","/Users/lexuantung/Documents/projects/trangg/src/reportWebVitals.js":"2","/Users/lexuantung/Documents/projects/trangg/src/App.js":"3","/Users/lexuantung/Documents/projects/trangg/src/components/img.js":"4","/Users/lexuantung/Documents/projects/trangg/src/components/popup.js":"5","/Users/lexuantung/Documents/projects/trangg/src/components/btn.js":"6"},{"size":500,"mtime":1608836074860,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1608836074861,"results":"9","hashOfConfig":"8"},{"size":3589,"mtime":1609253202632,"results":"10","hashOfConfig":"8"},{"size":1639,"mtime":1609203552307,"results":"11","hashOfConfig":"8"},{"size":712,"mtime":1609113996912,"results":"12","hashOfConfig":"8"},{"size":946,"mtime":1609114383231,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ifztt5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/lexuantung/Documents/projects/trangg/src/index.js",[],["29","30"],"/Users/lexuantung/Documents/projects/trangg/src/reportWebVitals.js",[],"/Users/lexuantung/Documents/projects/trangg/src/App.js",["31","32","33","34","35","36","37","38"],"import React from 'react';\nimport PopUp from './components/popup';\nimport { Button, PopUpButton } from './components/btn';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport './App.css';\nimport './components/img.css';\nimport './components/animation.css';\n\nimport heart from './static/heart-icon1.png';\nimport axios from 'axios';\nimport src from '*.avif';\n\nfunction getRandomInt(max) {\n  const sign = (Math.random() > 0.5) ? -1 : 1;\n  return Math.floor(Math.random() * Math.floor(max)) * sign;\n}\n\nasync function getNewCachedImgSrc() {\n  try {\n    axios.defaults.headers.common['x-api-key'] = \"b3921cad-6daf-47e5-b6b9-6d6f8d241d59\"\n\n    let response = await axios.get('https://api.thecatapi.com/v1/images/search', { params: { limit:5, size:\"full\" } })\n\n    console.log(response.data)\n    const srcList = response.data.map((image) => {\n      new Image().src = image.url\n      return {src: image.url, id: image.id}\n    });\n    return srcList\n  } catch(err) {\n    console.log(err)\n  }\n}\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      srcList: [],\n      angle: getRandomInt(15),\n      showPopUp: false,\n      buttonEnabled: false\n    }\n    this.togglePopUp = this.togglePopUp.bind(this);\n    this.newImage = this.newImage.bind(this);\n    this.disableButton = this.disableButton.bind(this);\n    this.enableButton = this.enableButton.bind(this);\n  }\n\n  togglePopUp() {\n    this.setState({\n      showPopUp: !this.state.showPopUp\n    });\n  }\n\n  newImage() {\n    var modifiedList = [...this.state.srcList];\n    modifiedList.shift();\n    this.setState({srcList: modifiedList, angle: getRandomInt(15)});\n  }\n\n  async fillSrcList() {\n    const lowerLimit = 5;\n    const {srcList} = this.state;\n    if(srcList.length < lowerLimit) {\n      this.setState({srcList: [...srcList, ...await getNewCachedImgSrc()]}, console.log(this.state.srcList))\n      this.fillSrcList();\n    }\n  }\n\n  componentDidMount() {\n    this.fillSrcList();\n  }\n\n  componentDidUpdate() {\n    this.fillSrcList();\n  }\n\n  disableButton() {\n    this.setState({buttonEnabled: false})\n  }\n\n  enableButton() {\n    console.log(\"button enabled\")\n    this.setState({buttonEnabled: true})\n  }\n\n  render(){\n      const {srcList, showPopUp, angle, buttonEnabled} = this.state;\n      var hasImage = true;\n      if (srcList === undefined || srcList.length == 0) {\n        hasImage = false\n      }\n      return(\n        <div className=\"App\">\n          {/* { (hasImage) ? \n            <TransitionGroup className=\"image-container\">\n              <CSSTransition\n                key={`image-${srcList[0].id}`} // to trigger transition everytime it updates\n                timeout={1600}\n                classNames=\"image\"\n                // onExit={this.disableButton}\n                onEntered={this.enableButton}\n              >\n                <img \n                  className=\"image\" \n                  src={srcList[0]} \n                  alt=\"cute cat\" \n                  style={{transform: `translate(-50%, -50%) rotate(${angle}deg)`}}\n                  onClick={(buttonEnabled) ? this.newImage: null} />\n              </CSSTransition>\n            </TransitionGroup> : null\n          } */}\n          <PopUp show={showPopUp}>\n            <h1>This is the PopUp!</h1>\n            <Button addClass=\"close-pop-up hoverable\" onClick={this.togglePopUp}>\n              <img src={heart} style={{width: \"50px\"}} />\n            </Button>\n          </PopUp>\n          <PopUpButton in={!showPopUp} onClick={this.togglePopUp} />\n        </div>\n      )\n  }\n}\n\nexport default App;","/Users/lexuantung/Documents/projects/trangg/src/components/img.js",[],"/Users/lexuantung/Documents/projects/trangg/src/components/popup.js",[],"/Users/lexuantung/Documents/projects/trangg/src/components/btn.js",[],["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":4,"column":10,"nodeType":"47","messageId":"48","endLine":4,"endColumn":23},{"ruleId":"45","severity":1,"message":"49","line":4,"column":25,"nodeType":"47","messageId":"48","endLine":4,"endColumn":40},{"ruleId":"45","severity":1,"message":"50","line":12,"column":8,"nodeType":"47","messageId":"48","endLine":12,"endColumn":11},{"ruleId":"45","severity":1,"message":"51","line":90,"column":34,"nodeType":"47","messageId":"48","endLine":90,"endColumn":39},{"ruleId":"45","severity":1,"message":"52","line":90,"column":41,"nodeType":"47","messageId":"48","endLine":90,"endColumn":54},{"ruleId":"53","severity":1,"message":"54","line":92,"column":51,"nodeType":"55","messageId":"56","endLine":92,"endColumn":53},{"ruleId":"45","severity":1,"message":"57","line":93,"column":9,"nodeType":"47","messageId":"48","endLine":93,"endColumn":17},{"ruleId":"58","severity":1,"message":"59","line":118,"column":15,"nodeType":"60","endLine":118,"endColumn":58},{"ruleId":"41","replacedBy":"61"},{"ruleId":"43","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'CSSTransition' is defined but never used.","Identifier","unusedVar","'TransitionGroup' is defined but never used.","'src' is defined but never used.","'angle' is assigned a value but never used.","'buttonEnabled' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'hasImage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["63"],["64"],"no-global-assign","no-unsafe-negation"]